spring:
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/order-service
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
  application:
    name: order-service
  kafka:
    bootstrap:
      servers: localhost:9092
    template:
      default-topic: notificationTopic
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring:
        json:
          type:
            mapping: event:com.jyothi.orderservice.event.OrderPlacedEvent

server:
  port: 8081

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0


#resilience4j properties
resilience4j:
  circuit breaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  time limiter: #Resilience4j Timeout properties
    instances:
      inventory:
        timeout-duration: 3s
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s

#kafka properties




